import sqlite3
conn = sqlite3.connect("expenses.db")  # Connect to the database
cursor = conn.cursor()
cursor.execute("PRAGMA table_info(expenses);")
columns = cursor.fetchall()
for column in columns:
        print(column)
conn.close()
import sqlite3
conn = sqlite3.connect("expenses.db")  # Connect to the database
cursor = conn.cursor()
cursor.execute("PRAGMA table_info(expenses);")
columns = cursor.fetchall()
for column in columns:
        print(column)
        
conn.close()
import sqlite3
conn = sqlite3.connect("expenses.db")  # Connect to the database
cursor = conn.cursor()
# Check the schema of the expenses table
cursor.execute("PRAGMA table_info(expenses);")
columns = cursor.fetchall()
# Print the column names
for column in columns:
        print(column)
        
conn.close()
import sqlite3
conn = sqlite3.connect("expenses.db")
cursor = conn.cursor()
# Rename the old table
cursor.execute("ALTER TABLE expenses RENAME TO old_expenses;")
# Create the new expenses table with the correct column names
cursor.execute("""
    CREATE TABLE expenses (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
                    user_id INTEGER,
                            category TEXT,  -- Change 'category_id' to 'category'
                                    amount REAL NOT NULL,
                                            date TEXT NOT NULL,
                                                    FOREIGN KEY (user_id) REFERENCES users (id)
                                                        )
                                                        """)
# Copy data from old table to new table
cursor.execute("""
    INSERT INTO expenses (id, user_id, category, amount, date)
        SELECT id, user_id, NULL, amount, date FROM old_expenses;
        """)
# Drop the old table
cursor.execute("DROP TABLE old_expenses;")
conn.commit()
conn.close()
print("Database updated successfully!")
PRAGMA table_info(expenses);
import sqlite3
conn = sqlite3.connect("expenses.db")
cursor = conn.cursor()
cursor.execute("PRAGMA table_info(expenses);")
columns = cursor.fetchall()
for column in columns:
        print(column)
        
conn.close()
exit()
